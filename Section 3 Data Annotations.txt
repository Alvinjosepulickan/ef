Mapping to database
	conventions
	data annotation
	fluent api

table name
	[Table("tb_Category")]
column name
	[Column("CategoryId")]

one-one
	Book


[Key]
[Required]
[MaxLength(50)]
[NotMapped]




        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
Identity->Value will be only generated by db when a value is first added to db
None->    prevents value from being generated by db
computed-> generated first when saved and regenerated when updated


public key


protected override void OnModelCreating(ModelBuilder builder)
        {
            //composite key
            builder.Entity<BookAuthor>().HasKey(ba => new { ba.Book_Id, ba.AuthorId });
        }






foreign key and relations
 
		[Required]
        public Author Authors { get; set; }
        [ForeignKey("Author")]
        public int Author_id { get; set; }

one-one
	Book ->BookDetails
	in Book.cs
	[ForeignKey("BookDetails")]
    public int BookDetails_Id { get; set; }
    public BookDetails BookDetails { get; set; }

	in BookDetails.cs
	public Book Book { get; set; }

one- many
	book->publisher

	in Book.cs
	[ForeignKey("Publisher")]
    public int Publisher_Id { get; set; }
    public Publisher Publisher { get; set; }

	in Publisher.cs
	public List<Book> Books { get; set; }



many to many
	book->author

	need mapping table to establish many to many
			BookAuthor.cs

	in Book.cs and Author.cs
        public ICollection<BookAuthor> BookAuthors { get; set; }





create and update book